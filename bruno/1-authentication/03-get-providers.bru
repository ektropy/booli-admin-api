meta {
  name: List Authentication Providers
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/api/auth/v1/providers
}

assert {
  res.status: eq 200
}

script:post-response {
  if (res.getStatus() === 200) {
    const body = res.getBody();
    
    if (body.providers && body.providers.length > 0) {
      body.providers.forEach((provider, index) => {
      });
      
      if (body.providers.includes('keycloak')) {
        bru.setEnvVar("keycloakProviderName", "keycloak");
      }
    }
  }
}

tests {
  test("Providers endpoint accessible", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response contains providers", function() {
    const body = res.getBody();
    expect(body).to.have.property("providers");
    expect(body.providers).to.be.an("array");
  });
  
  test("At least one provider configured", function() {
    const body = res.getBody();
    expect(body.providers.length).to.be.greaterThan(0);
  });
  
  test("Keycloak provider is available", function() {
    const body = res.getBody();
    expect(body.providers).to.include('keycloak');
  });
}