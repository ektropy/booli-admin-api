meta {
  name: Verify FGAP v2 Status
  type: http
  seq: 3
}

get {
  url: {{keycloakUrl}}/admin/realms/msp-acme-local/clients?clientId=msp-client
}

headers {
  Authorization: Bearer {{keycloakAdminToken}}
}

script:pre-request {
  // Get Keycloak admin token for verification
  const tokenRequest = {
    url: `${bru.getEnvVar("keycloakUrl")}/realms/master/protocol/openid-connect/token`,
    method: "POST",
    headers: {
      "Content-Type": "application/x-www-form-urlencoded"
    },
    body: "grant_type=password&username=admin&password=admin&client_id=admin-cli"
  };
  
  // This is a verification step, so we'll handle token in post-response
}

script:post-response {
  if (res.getStatus() === 401) {
    return;
  }
  
  if (res.getStatus() === 200) {
    const clients = res.getBody();
    if (clients && clients.length > 0) {
      const mspClient = clients[0];
    }
  }
}

tests {
  test("FGAP security is active", function() {
    // Either we get proper data (200) or we're properly blocked (401)
    const status = res.getStatus();
    expect([200, 401]).to.include(status);
  });
}