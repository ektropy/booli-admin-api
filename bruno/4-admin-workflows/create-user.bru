meta {
  name: Create User
  type: http
  seq: 3
}

post {
  url: {{baseUrl}}/api/2025-08-01/admin/users
  body: json
}

headers {
  Authorization: Bearer {{accessToken}}
  Content-Type: application/json
}

body:json {
  {
    "tenant_realm": "{{tenantRealm}}",
    "email": "test.user@example.com",
    "first_name": "Test",
    "last_name": "User",
    "username": "testuser",
    "enabled": true,
    "send_invite": false
  }
}

assert {
  res.status: eq 201
}

script:post-response {
  if (res.getStatus() === 201) {
    const body = res.getBody();
    bru.setEnvVar("userId", body.id);
  }
}

tests {
  test("User creation returns 201", function() {
    expect(res.getStatus()).to.equal(201);
  });
  
  test("Response contains user data", function() {
    const body = res.getBody();
    expect(body).to.have.property("id");
    expect(body.email).to.equal("test.user@example.com");
  });
}