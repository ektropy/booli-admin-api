meta {
  name: List Identity Providers
  type: http
  seq: 5
}

get {
  url: {{baseUrl}}/identity-providers
}

headers {
  Authorization: Bearer {{accessToken}}
  X-Auth-Provider: keycloak
}

assert {
  res.status: eq 200
}

tests {
  test("List providers returns 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response is an array", function() {
    const body = res.getBody();
    expect(Array.isArray(body)).to.be.true;
  });

  test("Contains created providers", function() {
    const body = res.getBody();
    const aliases = body.map(p => p.alias);
    
    // Check if any of our created providers exist
    const hasOidc = aliases.some(alias => alias.includes('test-oidc'));
    const hasOauth2 = aliases.some(alias => alias.includes('test-oauth2'));
    const hasSaml = aliases.some(alias => alias.includes('test-saml'));
    const hasMicrosoft = aliases.some(alias => alias.includes('test-microsoft'));
    
    expect(hasOidc || hasOauth2 || hasSaml || hasMicrosoft).to.be.true;
  });

  test("Each provider has required fields", function() {
    const body = res.getBody();
    if (body.length > 0) {
      const provider = body[0];
      expect(provider).to.have.property("alias");
      expect(provider).to.have.property("type");
      expect(provider).to.have.property("enabled");
      expect(provider).to.have.property("config");
    }
  });
}