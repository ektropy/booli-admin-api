meta {
  name: Get Identity Provider
  type: http
  seq: 6
}

get {
  url: {{baseUrl}}/identity-providers/{{createdOidcProviderAlias}}
}

headers {
  Authorization: Bearer {{accessToken}}
  X-Auth-Provider: keycloak
}

assert {
  res.status: eq 200
}

tests {
  test("Get provider returns 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Response contains provider details", function() {
    const body = res.getBody();
    expect(body).to.have.property("alias");
    expect(body).to.have.property("type");
    expect(body).to.have.property("enabled");
    expect(body).to.have.property("config");
  });

  test("Provider alias matches request", function() {
    const body = res.getBody();
    expect(body.alias).to.equal(bru.getEnvVar("createdOidcProviderAlias"));
  });

  test("Client secret is masked for security", function() {
    const body = res.getBody();
    if (body.config.client_secret) {
      expect(body.config.client_secret).to.equal("**********");
    }
  });
}